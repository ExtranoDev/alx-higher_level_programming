Tests for the matrix_divided function

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> div = 3
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, div)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8]]
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2, 3], ["People", 5, 6], [7, 8]]
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists)of integers/floats

>>> matrix = []
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists)of integers/floats

>>> matrix = None
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists)of integers/floats

>>> matrix = [1, 2, 3, 4]
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists)of integers/floats

>>> matrix = 2345
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists)of integers/floats

>>> matrix = float('nan')
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists)of integers/floats

>>> div = 0
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix = [[], []]
>>> div = 5
>>> matrix_divided(matrix, div)
[[], []]
